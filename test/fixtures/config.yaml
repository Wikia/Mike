# dashboard name
name: "The A-Team components"

# first, we specify settings for generic sources like Jira and MySQL
# they need credentials and host name
sources:
  - name: wikia/jira
    kind: common/jira
    server: "${JIRA_URL}"
    user: "${JIRA_USER}"  # variables substitution
    password: "${JIRA_PASSWORD}" # Jira API key
  - name: wikia/elastic
    kind: common/elastic
    host: "${ELASTIC_HOST}"
  - name: wikia/tags-report
    kind: common/mysql
    host: "${DATABASE_SPECIALS}"
    database: "specials"
    user: "${DATABASE_USER}"
    password: "${DATABASE_PASSWORD}"
  - name: wikia/analytics
    kind: common/analytics
    # https://developers.google.com/analytics/devguides/reporting/core/v4/quickstart/service-py
    credentials: '${ANALYTICS_SERVICE_ACCOUNT_JSON}'
    view_id: 89268958  # All Wikis Sampled @ 100%
  - name: wikia/athena
    kind: aws/athena
    access_key_id: "${ATHENA_ACCESS_KEY_ID}"
    secret_access_key: "${ATHENA_SECRET}"
    s3_staging_dir: "${ATHENA_S3_STAGING_DIR}"
    region: "us-east-1"

# where will metrics be stored
storage:
  engine: mysql
  host: "${DATABASE_HOST}"
  host_slave: "${DATABASE_HOST_SLAVE}"  # this is optional and will be used when use_slave=True
  database: "mike_holmes"
  user: "${DATABASE_USER}"
  password: "${DATABASE_PASSWORD}"

# now define metrics that are taken from sources above
metrics:
  # Jira
  - name: jira/p3-tickets
    source: wikia/jira  # see above
    query: "component = '{component}' AND Priority = 'Major - fix in 28 days (P3)' AND status = 'Open'"  # you can use template strings
    label: "%d P3 tickets"
  - name: jira/p2-tickets
    source: wikia/jira
    query: "component = '{component}' AND Priority = 'Severe - fix in 48h (P2)' AND status = 'Open'"
    label: "%d P2 tickets"
  # Elasticsearch
  - name: access-log/page-views
    source: wikia/elastic
    index: logstash-apache-access-log
    query: "request: 'GET' AND url: '{url}'"
    label: "%d HTTP requests handled"
  # MySQL, Special:TagsReport
  - name: tags-report/usage
    source: wikia/tags-report
    query: "SELECT count(*) FROM city_used_tags WHERE ct_kind = %(tag)s"
    label: "<{tag}> tag usage: %d"
  - name: wikifactory/feature-enabled-on
    source: wikia/wikifactory  # we will use a generic source from the code if this one is not defined in "sources" section above
    label: "enabled on %d wikis"
    query: FeatureEnabledOn
  # Google Analytics
  - name: analytics/events
    source: wikia/analytics
    label: "{ga_label}: %d"
    metric: "ga:totalEvents"
    filters: "{ga_filter}"
  # Athena
  - name: athena/contributions_in_ns
    source: wikia/athena
    # https://prestodb.github.io/docs/0.172/functions/datetime.html
    query: "SELECT count(*) FROM statsdb.fact_event_events WHERE year = cast(year(now()) as VARCHAR) AND event_ts > now() - interval '1' day AND event_type IN ('create', 'edit') AND namespace_id BETWEEN %(athena_ns_from)d AND %(athena_ns_to)d"
    label: "Edits in the last 24h: %d"
  - name: athena/pageviews_in_ns
    source: wikia/athena
    # https://prestodb.github.io/docs/0.172/functions/datetime.html
    query: "SELECT count(*) FROM statsdb.fact_pageview_events WHERE year = cast(year(now()) as VARCHAR) AND event_ts > now() - interval '1' day AND namespace_id BETWEEN %(athena_ns_from)d AND %(athena_ns_to)d"
    label: "Page views in the last 24h: %d"

common:
  # these keys will be copied to each feature defined below
  metrics:
    -  name: jira/p2-tickets
       weight: 2  # P2 tickets are more important
    -  name: jira/p3-tickets

# now features "score" will be calculated using the metrics defined above with per-feature parameters set
features:
  - name: DynamicPageList
    url: http://docs.company.net/pages/DynamicPageList
    repo: https://github.com/Wikia/app/tree/dev/extensions/DynamicPageList
    template:
      component: "DynamicPageList"  # this will be used in template string
      tag: "dpl"
    metrics:
      # additional, per-feature metrics
      -  name: tags-report/usage
         weight: 0.1  # defaults to 1

  - name: Message Wall
    url: http://docs.company.net/pages/Wall
    repo: https://github.com/Wikia/app/tree/dev/extensions/wikia/Wall
    template:
      component: "Message Wall"  # this will be used in template string
      athena_ns_from: 1200  # NS_WALL
      athena_ns_to: 1202 # NS_USER_WALL_MESSAGE_GREETING
    metrics:
      - name: athena/contributions_in_ns
      - name: athena/pageviews_in_ns

  - name: Blogs
    url: http://docs.company.net/pages/Blogs
    repo: https://github.com/Wikia/app/tree/dev/extensions/wikia/Blogs
    template:
      component: "Blogs"  # this will be used in template string
      athena_ns_from: 500  # NS_BLOG_ARTICLE
      athena_ns_to: 503 # NS_BLOG_LISTING_TALK
    metrics:
      - name: athena/contributions_in_ns
      - name: athena/pageviews_in_ns

  # Editors
  - name: CKEditor
    url: http://docs.company.net/pages/CKEditor
    repo: https://github.com/Wikia/app/tree/dev/extensions/wikia/RTE
    template:
        component: "CK Editor (RTE)"
        ga_filter: "ga:eventCategory==editor-ck;ga:eventAction==submit;ga:eventLabel==publish"
        ga_label: "Edits published daily"
    metrics:
        - name: analytics/events

  - name: VisualEditor
    url: http://docs.company.net/pages/VisualEditor
    repo: https://github.com/Wikia/app/tree/dev/extensions/VisualEditor
    template:
        component: "Visual Editor"
        ga_filter: "ga:eventCategory==editor-ve;ga:eventAction==success;ga:eventLabel==publish"
        ga_label: "Edits published daily"
    metrics:
        - name: analytics/events

  - name: SourceEditor
    url: http://docs.company.net/pages/SourceEditor
    repo: https://github.com/Wikia/app
    template:
        component: "Source Editor"
        ga_filter: "ga:eventCategory==editor-mw;ga:eventAction==submit;ga:eventLabel==publish"
        ga_label: "Edits published daily"
    metrics:
        - name: analytics/events

  - name: MiniEditor
    url: http://docs.company.net/pages/MiniEditor
    repo: https://github.com/Wikia/app
    template:
        component: "Mini Editor"
        ga_filter: "ga:eventCategory==editor-mini-mw;ga:eventAction==impression;ga:eventLabel==edit-page-ready"
        ga_label: "Editor impressions daily"
    metrics:
        - name: analytics/events
